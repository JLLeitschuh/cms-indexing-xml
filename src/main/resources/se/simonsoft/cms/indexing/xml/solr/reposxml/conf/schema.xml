<?xml version="1.0" ?>
<!--

    Copyright (C) 2009-2012 Simonsoft Nordic AB

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<!-- Repos Search XML element index -->

<schema name="reposxml" version="1.2">

	<fields>
		<field name="_version_" type="long" indexed="true" stored="true"/>
	
		<!-- 
		Uniqueness and support for delete/reindex/overwrite
		-->
		<field name="id" type="string"
			indexed="true" stored="true"
			multiValued="false" required="true" />

		<!-- 
		CMS item fields.
		-->
		<field name="path"     type="string" indexed="true"  stored="true"  multiValued="false"/>
		<field name="pathname" type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathext"  type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathdir"  type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathin"   type="string" indexed="true"  stored="false" multiValued="true"/>
		<field name="pathfull"  type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="rev"  type="long" indexed="true" stored="true" multiValued="false"/>
		<field name="revt" type="date" indexed="true" stored="true" multiValued="false"/>
		<field name="repo"       type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="repoparent" type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="repohost"   type="string" indexed="true" stored="true" multiValued="false"/>
		<dynamicField name="prop_*" type="string" indexed="true" stored="true" multiValued="false"/>

		<!--
		Checksums of any field or of contents that are not indexed
		-->
		<field name="c_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />

		<!--
		XML element name including namespace
		-->
		<field name="name" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!-- 
		Attributes, solr should accept with any valid xml
		attribute name including those containing ":"
		-->
		<dynamicField name="a_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
			
		<!-- 
		Joinable references to root, parent (null if root), previous sibling (null if first), ancestors, next sibling (null if last)
		-->
		<field name="id_r" type="string" indexed="true" stored="true" />
		<field name="id_p" type="string" indexed="true" stored="true" />
		<field name="id_s" type="string" indexed="true" stored="true" />
		<field name="id_a" type="string" indexed="true" stored="true" multiValued="true" />
		<!-- next sibling, can join the other way <field name="id_n" type="string" indexed="true" stored="true" /> -->
		
		<!-- 
		Position in DOM, indexes starting from 1 like in XSL
		-->	
		<field name="depth" type="int" indexed="true" stored="true"/>
		<field name="position" type="int" indexed="true" stored="true"/>
		<!-- 
		Position in tree for uniqueness within document, .N appended for each level, 1-based
		-->
		<field name="pos" type="string" indexed="true" stored="true" required="true"/>		
		
		<!-- 
		"Inherit" attributes, including self, near overrides far
		-->
		<dynamicField name="ia_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />

		
		<dynamicField name="ns_*" type="string" indexed="true" stored="true"/>
		<dynamicField name="ins_*" type="string" indexed="true" stored="true"/>
			
		<!--
		Parent element name
		-->
		<field name="pname" type="string"
			indexed="true" stored="true"
			multiValued="false" />		
		<!-- 
		Ancestor element names, excluding self
		-->
		<field name="aname" type="string"
			indexed="true" stored="true"
			multiValued="true" />
			
		<!--
		Root element name
		-->
		<field name="rname" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!--
		Root element attributes
		-->
		<dynamicField name="ra_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		
		<!--
		Preceding sibling's name 
		-->
		<field name="sname" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!--
		Preceding sibling's attributes 
		-->
		<dynamicField name="sa_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
			
		<!--
		Verbatim element and its contents.
		Should preferrably be accessed through an abstraction so reading can be
		changed if index grows too big.
		-->
		<field name="source" type="string" indexed="false" stored="true" />
		
		<!--
		Text content of element including children, XML normalized.
		-->
		<field name="text" type="string" indexed="true" stored="true"/>
		
		<!-- 
		Special filtered extractions, source - checksum - word count.
		Store sources? - No, because it is lots of data and verbatim source can most likely be used.
		Index sources? - Maybe not because we need the analysis to be done before the checksum anyway.
		-->
		<dynamicField name="source_*" type="string" indexed="false" stored="false"/>
		<dynamicField name="c_*" type="string" indexed="true" stored="true"/>
		<dynamicField name="words_*" type="int" indexed="true" stored="true"/>		
	</fields>

	<!-- field to use to determine and enforce document uniqueness. -->
	<uniqueKey>id</uniqueKey>

	<!-- field for the QueryParser to use when an explicit fieldname is absent -->
	<defaultSearchField>name</defaultSearchField>

	<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
	<solrQueryParser defaultOperator="OR" />
	
	<types>	
		<fieldtype name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" />
		
		<!-- For faster range queries, precisionStep = 0 suitable for revision and depth -->
		<fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"
			sortMissingLast="false"/><!-- sort missing first to get root and first siblings first -->
		<fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="date" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>
	</types>
		
</schema>

